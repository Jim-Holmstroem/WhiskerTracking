
Classify our algorithm (lazy/eager) see bik12

rename goodness to "closeness" since its more widely used in ML

Minkowski metric - L_p norm (L_1(more resistant to noise) and L_inf(noisy))
Our distance functions must be metric, prove this for all.

Feature selection: (100D noise,1D disc. information) - with unweighted euclidian distance the 100D will always dominate \sum(x_i-mu_i)^2
solution: We want large variation in the class labels to be more significant (for example, PCA assumes label variation is proportional to variation, which is some times generally true)

test different combinations of algorithms fitnesses=lambda (func1,func2,...) :[(func1,func2,..),fitness(func1,func2,...)], prod(FuncSpace1,FuncSpace2,...)
best = max(fitnesses)
where fitness is how well the algorithm performes on validatiot-data

try the methods for kNN speedup in our wdb
bucketing
KD-tree

bayes optimal as in bik12, is this applicable ?


Can something be considered to ba an heuristic?





==========================================
PF vs condensation


===================== PF as searchblablabla =================

PF is simply a directed search

Searching in this m-dimensional featurespace can be done in O(log(n^m))=O(mlog(n)) but filling it adequately still requires O(n^m)

Considering configurations of the model that are improbable is totally unnecessary<image of whale and flower>


============= Problems ========================


Artifacts from encoding the video.

Whiskers are mostly subpixel objects.

Images are a sampling of a continous (disregarding quantum effects) view of the reality
img=\sum\dirac{}

=============== Goal =====================

(Mockup?) Standalone application




"partikelfiltrering: approximativ slutledning i dynamiska bayesianska nätverk"
Point out the connection between physical kinematic system (present the main formulaes that governs the motions of objects and show that they are infact a dynamic system, then adding uncertaintis we get bayesian network)


Borrow the word reduce from complexity theory and use it as: reducing the problem to an innerstate of an dynamicsystem



================= Own Contributions =============
<<Vart ska dethär in?>>


Given PF a model of whiskers ...



================== Scope ==================
<<>>

Since the video-sequences we are intending to run on is grayscale-only we simply 
transform all the images down to grayscale which wont affect the results even if
the image happens to be in color.









============= The handling of uniform (seen from prop.dist in featurespace) like base-position/angle ===================






=============== WRAPUP ===================

(Mockup?)

Having the goal to make it an standalone application had some challanges 
compared to do a simple muckup in MATLAB(R) or such since some builtin
functionallity is missing and also having problems like missaligned buffers 
or having to write an adapter between images and matrices as an example.



